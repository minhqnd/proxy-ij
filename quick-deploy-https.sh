#!/bin/bash
# quick-deploy-https.sh - Quick deploy v·ªõi th√¥ng tin m·∫∑c ƒë·ªãnh

echo "üöÄ Quick Deploy HTTPS Proxy"
echo "==========================="

# S·ª≠ d·ª•ng th√¥ng tin t·ª´ context tr∆∞·ªõc
EC2_HOST="host.minhqnd.com"
EC2_USER="ubuntu"

echo "üì° Deploying to: $EC2_USER@$EC2_HOST"
echo "üìÅ Working directory: $(pwd)"

# Ki·ªÉm tra files c·∫ßn thi·∫øt
echo ""
echo "üìã Checking files..."
REQUIRED_FILES=("https-intercepting-proxy.js" "setup-https-interception.sh" "package.json")

for file in "${REQUIRED_FILES[@]}"; do
    if [ -f "$file" ]; then
        echo "‚úÖ $file"
    else
        echo "‚ùå $file (missing)"
    fi
done

echo ""
echo "ü§ñ T√¥i s·∫Ω gi·∫£ ƒë·ªãnh b·∫°n c√≥ SSH key v√† k·∫øt n·ªëi EC2."
echo "N·∫øu c·∫ßn, ch·∫°y commands n√†y manually:"
echo ""

echo "# 1. Upload files:"
for file in "${REQUIRED_FILES[@]}"; do
    if [ -f "$file" ]; then
        echo "scp -i your-key.pem $file $EC2_USER@$EC2_HOST:~/"
    fi
done

echo ""
echo "# 2. SSH v√†o EC2 v√† setup:"
cat << 'EOF'
ssh -i your-key.pem ubuntu@host.minhqnd.com

# Tr√™n EC2:
sudo apt-get update
sudo apt-get install -y openssl

# C√†i npm dependencies (n·∫øu c·∫ßn)
npm install

# Stop proxy c≈©
pm2 stop all

# Ch·∫°y HTTPS intercepting proxy
pm2 start https-intercepting-proxy.js --name "https-proxy" --env production

# Check status
pm2 status
pm2 logs https-proxy --lines 10

# Test
curl http://localhost:8080/proxy-health
EOF

echo ""
echo "# 3. Test t·ª´ local:"
echo "./verify-https-proxy.sh"

echo ""
echo "üéØ K·∫øt qu·∫£ mong ƒë·ª£i:"
echo "‚úÖ HTTP proxy: Ho·∫°t ƒë·ªông b√¨nh th∆∞·ªùng"
echo "‚úÖ HTTPS CONNECT: Ho·∫°t ƒë·ªông (tunnel)"
echo "üîí HTTPS Interception: Ph·ª• thu·ªôc certificate generation"
echo "‚ö†Ô∏è  Certificate warnings: B√¨nh th∆∞·ªùng cho HTTPS interception"

echo ""
echo "üß™ Test URLs sau khi deploy:"
echo "- http://example.com (injection s·∫Ω work)"
echo "- https://example.com (c·∫ßn accept certificate warning)"
echo ""
echo "B·∫°n mu·ªën t√¥i t·∫°o commands c·ª• th·ªÉ ƒë·ªÉ copy-paste kh√¥ng?"